package com.game;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;



import javax.swing.JPanel;
import javax.swing.Timer;

public class GamePlay extends JPanel implements KeyListener,ActionListener{

	private boolean play=false;
	private int score=0;
	private int totalBricks=21;
	private Timer timer;
	private int delay=5;

	private int playerX=310;
	private int ballposX=120;
	private int ballposY=350;
	private int ballXdir=-1;
	private int ballYdir=-2;
	
	private Map_Generator map;

	public GamePlay()
	{
		map =new Map_Generator(3, 7);
		addKeyListener(this);
		setFocusable(true);
		setFocusTraversalKeysEnabled(false);
		timer= new Timer(delay,this);
		timer.start();

	} 

	public void paint(Graphics g)
	{
		g.setColor(Color.black);
		g.fillRect(1, 1, 600, 592);
		
		map.drawBrick((Graphics2D)g);

		g.setColor(Color.yellow);
		g.fillRect(0, 0, 3, 592);
		g.fillRect(0, 0, 692, 3);
		g.fillRect(691, 0, 3, 592);

		g.setColor(Color.red);
		g.fillRect(playerX, 550, 100, 8);

		g.setColor(Color.green);
		g.fillOval(ballposX, ballposY, 20, 20);
		
		g.dispose();
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		
		timer.start();
		
		if(play)
		{
			if(new Rectangle(ballposX,ballposY,20,20).intersects(new Rectangle(playerX,550,100,8)))
			{
				ballYdir=-ballYdir;
			}
			A:for(int i=0;i<map.map.length;i++)
			{
				for(int j=0;j<map.map[0].length;j++)
				{
					int brickX=j*map.brickWidth+80;
					int brickY=i*map.brickHeight+50;
					int brickHeight=map.brickHeight;
					int brickWidth=map.brickWidth;
					
					Rectangle rect=new Rectangle(brickX,brickY,brickWidth,brickHeight);
					Rectangle ballrect=new Rectangle(ballposX,ballposY,20,20);
					Rectangle brickRect=rect;
					if(ballrect.intersects(brickRect))
					{
						map.setBrick(0, i, j);
						totalBricks--;
						score+=5;
						if(ballposX+19 <= brickRect.x || ballposX+1 >= (brickRect.x + brickRect.width))
						{
							ballXdir=-ballXdir;
						}
						else 
						{
							ballYdir=-ballYdir;
						}
						break A;
					}
					
				}
				
			}
			ballposX+=ballXdir;
			ballposY+=ballYdir;
			if(ballposX<0)
			{
				ballXdir=-ballXdir;
			}
			if(ballposY<0)
			{
				ballYdir=-ballYdir;
			}
			if(ballposX>670)
			{
				ballXdir=-ballXdir;
			}
		}
		repaint();

	}

	@Override
	public void keyTyped(KeyEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void keyPressed(KeyEvent e) {
		if(e.getKeyCode()==KeyEvent.VK_RIGHT)
		{
			if(playerX>=600)
			{
				playerX=600;
			}
			else
			{
				moveRight();
			}
		}
		if(e.getKeyCode()==KeyEvent.VK_LEFT)
		{
			if(playerX<=10)
			{
				playerX=10;
			}
			else
			{
				moveLeft();
			}
		}

	}
	public void moveRight()
	{
		play=true;
		playerX+=20;
	}
	public void moveLeft()
	{
		play=true;
		playerX-=20;
	}
	@Override
	public void keyReleased(KeyEvent e) {
		// TODO Auto-generated method stub

	}

}
